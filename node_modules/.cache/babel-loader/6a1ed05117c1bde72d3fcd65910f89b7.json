{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erika\\\\Desktop\\\\react-flask\\\\react-flask-test\\\\src\\\\API\\\\PostList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostList() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [loading, setIsLoading] = useState(true);\n\n  const loadData = () => {\n    fetch('https://flaskreact-native-test.herokuapp.com/get', {\n      method: 'GET'\n    }).then(resp => resp.json()).then(article => {\n      setData(article);\n      setIsLoading(false);\n    }).catch(function (error) {\n      console.log(\"error with fetch:\" + error.message); //throws error\n\n      throw error;\n    });\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Howdy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" You clicked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => loadData(),\n      children: \"Click me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      data: data,\n      renderItem: ({\n        item\n      }) => {\n        return renderData(item);\n      },\n      onRefresh: () => loadData(),\n      refreshing: loading,\n      keyExtractor: item => `${item.id}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostList, \"Kpzx9BxzHmSLbtkADKRnOYLKWVc=\");\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["C:/Users/erika/Desktop/react-flask/react-flask-test/src/API/PostList.js"],"names":["React","useState","useEffect","PostList","data","setData","loading","setIsLoading","loadData","fetch","method","then","resp","json","article","catch","error","console","log","message","item","renderData","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAIA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,YAAV,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMO,QAAQ,GAAG,MAAM;AACnBC,IAAAA,KAAK,CAAC,kDAAD,EAAqD;AACtDC,MAAAA,MAAM,EAAC;AAD+C,KAArD,CAAL,CAGCC,IAHD,CAGMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAHd,EAICF,IAJD,CAIMG,OAAO,IAAG;AACZT,MAAAA,OAAO,CAACS,OAAD,CAAP;AACAP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAPD,EAQCQ,KARD,CAQO,UAASC,KAAT,EAAe;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBF,KAAK,CAACG,OAAxC,EADkB,CAElB;;AACA,YAAMH,KAAN;AACH,KAZD;AAcH,GAfD;;AAiBAd,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAKA,QAAQ,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AACA,MAAA,IAAI,EAAIJ,IADR;AAEA,MAAA,UAAU,EAAI,CAAC;AAACgB,QAAAA;AAAD,OAAD,KAAW;AACrB,eAAOC,UAAU,CAACD,IAAD,CAAjB;AACH,OAJD;AAKA,MAAA,SAAS,EAAI,MAAMZ,QAAQ,EAL3B;AAMA,MAAA,UAAU,EAAIF,OANd;AAOA,MAAA,YAAY,EAAIc,IAAI,IAAK,GAAEA,IAAI,CAACE,EAAG;AAPnC;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA1CQnB,Q;;KAAAA,Q;AA4CT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\n\r\n\r\nfunction PostList() {\r\n    const [data, setData] = useState([])\r\n    const [loading, setIsLoading] = useState(true)\r\n\r\n    const loadData = () => {\r\n        fetch('https://flaskreact-native-test.herokuapp.com/get', {\r\n            method:'GET'\r\n        })\r\n        .then(resp => resp.json())\r\n        .then(article =>{\r\n            setData(article)\r\n            setIsLoading(false)\r\n        })\r\n        .catch(function(error){\r\n            console.log(\"error with fetch:\" + error.message);\r\n            //throws error\r\n            throw error;\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadData()\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <p>Howdy</p>\r\n            <p> You clicked</p>\r\n            <button onClick={()=> loadData()}>Click me!</button>\r\n            <li\r\n            data = {data}\r\n            renderItem = {({item}) =>{\r\n                return renderData(item)\r\n            }}\r\n            onRefresh = {() => loadData()}\r\n            refreshing = {loading}\r\n            keyExtractor = {item => `${item.id}`}\r\n            >\r\n            \r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}